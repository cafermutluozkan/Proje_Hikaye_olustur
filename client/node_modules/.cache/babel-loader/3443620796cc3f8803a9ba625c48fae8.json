{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seyit\\\\Desktop\\\\test\\\\client\\\\src\\\\Screens\\\\HomeScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Memory from '../components/Memory';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchMemories } from '../actions/memoryActions';\nimport { Spinner, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HomeScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const memories = useSelector(state => state.memories);\n  useEffect(() => {\n    if (!memories[0]) {\n      dispatch(fetchMemories());\n    }\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"En g\\xFCncel an\\u0131lar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), !memories.length ? /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: memories.map(memory => /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        md: 6,\n        lg: 4,\n        xl: 3,\n        className: \"m-auto\",\n        children: /*#__PURE__*/_jsxDEV(Memory, {\n          memory: memory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)\n      }, memory._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(HomeScreen, \"zDtLDtRCPV3q0AbUQRNJrMCxBhk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = HomeScreen;\nexport default HomeScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"sources":["C:/Users/seyit/Desktop/test/client/src/Screens/HomeScreen.js"],"names":["React","useState","useEffect","Memory","useDispatch","useSelector","fetchMemories","Spinner","Row","Col","HomeScreen","dispatch","memories","state","length","map","memory","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,SAASC,OAAT,EAAkBC,GAAlB,EAAuBC,GAAvB,QAAkC,iBAAlC;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,QAAQ,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAA5B;AACAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACU,QAAQ,CAAC,CAAD,CAAb,EAAkB;AAChBD,MAAAA,QAAQ,CAACL,aAAa,EAAd,CAAR;AACD;AACF,GAJQ,EAIN,CAACK,QAAD,CAJM,CAAT;AAMA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAACC,QAAQ,CAACE,MAAV,gBACC,QAAC,OAAD;AAAS,MAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC,QAAC,GAAD;AAAA,gBACGF,QAAQ,CAACG,GAAT,CAAcC,MAAD,iBACZ,QAAC,GAAD;AACE,QAAA,EAAE,EAAE,EADN;AAEE,QAAA,EAAE,EAAE,CAFN;AAGE,QAAA,EAAE,EAAE,CAHN;AAIE,QAAA,EAAE,EAAE,CAJN;AAKE,QAAA,SAAS,EAAC,QALZ;AAAA,+BAQE,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA;AARF,SAMOA,MAAM,CAACC,GANd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADF;AAuBD,CAhCD;;GAAMP,U;UACaN,W,EACAC,W;;;KAFbK,U;AAkCN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nimport Memory from '../components/Memory'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchMemories } from '../actions/memoryActions'\r\n\r\nimport { Spinner, Row, Col } from 'react-bootstrap'\r\n\r\nconst HomeScreen = () => {\r\n  const dispatch = useDispatch()\r\n  const memories = useSelector((state) => state.memories)\r\n  useEffect(() => {\r\n    if (!memories[0]) {\r\n      dispatch(fetchMemories())\r\n    }\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <>\r\n      <h1>En güncel anılar</h1>\r\n      {!memories.length ? (\r\n        <Spinner animation='border' />\r\n      ) : (\r\n        <Row>\r\n          {memories.map((memory) => (\r\n            <Col\r\n              sm={12}\r\n              md={6}\r\n              lg={4}\r\n              xl={3}\r\n              className='m-auto'\r\n              key={memory._id}\r\n            >\r\n              <Memory memory={memory} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n"]},"metadata":{},"sourceType":"module"}